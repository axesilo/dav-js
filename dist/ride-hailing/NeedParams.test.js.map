{"version":3,"sources":["../src/ride-hailing/NeedParams.test.ts"],"names":[],"mappings":";;AAAA,6CAAsC;AAEtC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAC9B,MAAM,UAAU,GAAG,IAAI,oBAAU,CAAC;QAC9B,cAAc,EAAE;YACZ,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAClB;QACD,QAAQ,EAAE;YACN,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAClB;QACD,mBAAmB,EAAE;YACjB,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAClB;KACJ,CAAC,CAAC;IACH,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC;IAC3B,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;IAC3B,MAAM,oBAAoB,GAAQ;QAC9B,GAAG,EAAE,SAAS;QACd,QAAQ,EAAE,cAAc;QACxB,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,UAAU;QACd,cAAc,EAAE;YACZ,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAClB;QACD,QAAQ,EAAE;YACN,QAAQ,EAAE,SAAS;YACnB,SAAS,EAAE,SAAS;SACvB;QACD,mBAAmB,EAAE;YACjB,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAClB;QACD,KAAK,EAAE,OAAO;KACjB,CAAC;IAEF,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,2FAA2F,EAAE,GAAG,EAAE;YACjG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,2GAA2G,EAAE,GAAG,EAAE;YACjH,MAAM,gBAAgB,GAAG,IAAI,oBAAU,EAAE,CAAC;YAC1C,gBAAgB,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"NeedParams.test.js","sourcesContent":["import NeedParams from './NeedParams';\n\ndescribe('NeedParams class', () => {\n    const needParams = new NeedParams({\n        pickupLocation: {\n            lat: 32.050382,\n            long: 34.766149,\n        },\n        location: {\n            lat: 32.050382,\n            long: 34.766149,\n        },\n        destinationLocation: {\n            lat: 32.050782,\n            long: 34.768149,\n        },\n    });\n    needParams.id = 'TOPIC_ID';\n    needParams.davId = 'davId';\n    const serializedNeedParams: any = {\n        ttl: undefined,\n        protocol: 'ride_hailing',\n        type: 'need',\n        id: 'TOPIC_ID',\n        pickupLocation: {\n            lat: 32.050382,\n            long: 34.766149,\n        },\n        location: {\n            latitude: 32.050382,\n            longitude: 34.766149,\n        },\n        destinationLocation: {\n            lat: 32.050782,\n            long: 34.768149,\n        },\n        davId: 'davId',\n    };\n\n    describe('serialize method', () => {\n        it('must return a JSON object that contains all properties defined in the NeedParams instance', () => {\n            expect(needParams.serialize()).toEqual(serializedNeedParams);\n        });\n    });\n\n    describe('deserialize method', () => {\n        it('must initialize all the properties of the NeedParams instance with the values provided in the JSON string', () => {\n            const needParamsObject = new NeedParams();\n            needParamsObject.deserialize(serializedNeedParams);\n            expect(needParamsObject).toEqual(needParams);\n        });\n    });\n});\n"]}