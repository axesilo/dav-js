{"version":3,"sources":["../src/ride-hailing/MessageParams.test.ts"],"names":[],"mappings":";;AAAA,mDAA4C;AAE5C,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,aAA4B,CAAC;IACjC,IAAI,uBAA4B,CAAC;IAEjC,UAAU,CAAC,GAAG,EAAE;QACd,aAAa,GAAG,IAAI,uBAAa,CAAC;YAChC,QAAQ,EAAE,SAAS;SACpB,CAAC,CAAC;QAEH,uBAAuB,GAAG;YACxB,aAAa,EAAE,SAAS;YACxB,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,SAAS;YACnB,GAAG,EAAE,SAAS;SACf,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;YAC/E,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,MAAM,mBAAmB,GAAG,IAAI,uBAAa,EAAE,CAAC;YAChD,mBAAmB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACzD,MAAM,CAAC,mBAAmB,CAAC,CAAC,cAAc,CAAC,uBAAa,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8EAA8E,EAAE,GAAG,EAAE;YACtF,MAAM,mBAAmB,GAAG,IAAI,uBAAa,EAAE,CAAC;YAChD,mBAAmB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACzD,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"MessageParams.test.js","sourcesContent":["import MessageParams from './MessageParams';\n\ndescribe('MessageParams class', () => {\n  let messageParams: MessageParams;\n  let serializedMessageParams: any;\n\n  beforeEach(() => {\n    messageParams = new MessageParams({\n      senderId: undefined,\n    });\n\n    serializedMessageParams = {\n      missionStatus: undefined,\n      protocol: 'ride_hailing',\n      type: 'message',\n      senderId: undefined,\n      ttl: undefined,\n    };\n  });\n\n  describe('serialize method', () => {\n    it('should return serialized MessageParams object with the current values', () => {\n      expect(messageParams.serialize()).toEqual(serializedMessageParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return a MessageParms instance', () => {\n      const messageParamsObject = new MessageParams();\n      messageParamsObject.deserialize(serializedMessageParams);\n      expect(messageParamsObject).toBeInstanceOf(MessageParams);\n    });\n\n    it('should return deserialize MessageParams instance with the current parameters', () => {\n      const messageParamsObject = new MessageParams();\n      messageParamsObject.deserialize(serializedMessageParams);\n      expect(messageParamsObject).toEqual(messageParams);\n    });\n  });\n});\n"]}