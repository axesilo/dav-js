{"version":3,"sources":["../src/drone-charging/BidParams.test.ts"],"names":[],"mappings":";;AAAA,2CAAoC;AAEpC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,SAAoB,CAAC;IACzB,IAAI,mBAAwB,CAAC;IAE7B,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,IAAI,mBAAS,CAAC;YACxB,EAAE,EAAE,UAAU;YACd,KAAK,EAAE,CAAC,UAAU,CAAC;YACnB,SAAS,EAAE,gBAAgB;YAC3B,WAAW,EAAE,iBAAiB;YAC9B,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,SAAS;SACpB,CAAC,CAAC;QAEH,mBAAmB,GAAG;YACpB,GAAG,EAAE,SAAS;YACd,QAAQ,EAAE,gBAAgB;YAC1B,IAAI,EAAE,KAAK;YACX,EAAE,EAAE,UAAU;YACd,KAAK,EAAE,CAAC,UAAU,CAAC;YACnB,SAAS,EAAE,gBAAgB;YAC3B,WAAW,EAAE,iBAAiB;YAC9B,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,SAAS;SACpB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;YAC3E,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;YAClF,MAAM,eAAe,GAAG,IAAI,mBAAS,EAAE,CAAC;YACxC,eAAe,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YACjD,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"BidParams.test.js","sourcesContent":["import BidParams from './BidParams';\n\ndescribe('BidParams class', () => {\n  let bidParams: BidParams;\n  let serializedBidParams: any;\n\n  beforeEach(() => {\n    bidParams = new BidParams({\n      id: 'TOPIC_ID',\n      price: ['66666666'],\n      vehicleId: 'VEHICLE_DAV_ID',\n      neederDavId: 'CONSUMER_DAV_ID',\n      isCommitted: true,\n      plugType: undefined,\n    });\n\n    serializedBidParams = {\n      ttl: undefined,\n      protocol: 'drone_charging',\n      type: 'bid',\n      id: 'TOPIC_ID',\n      price: ['66666666'],\n      vehicleId: 'VEHICLE_DAV_ID',\n      neederDavId: 'CONSUMER_DAV_ID',\n      isCommitted: true,\n      plugType: undefined,\n    };\n  });\n\n  describe('serialize method', () => {\n    it('should return serialized BidParams object with the current values', () => {\n      expect(bidParams.serialize()).toEqual(serializedBidParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return deserialize BidParams instance with the current parameters', () => {\n      const bidParamsObject = new BidParams();\n      bidParamsObject.deserialize(serializedBidParams);\n      expect(bidParamsObject).toEqual(bidParams);\n    });\n  });\n});\n"]}