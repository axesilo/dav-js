{"version":3,"sources":["../src/drone-charging/NeedFilterParams.test.ts"],"names":[],"mappings":";;AAAA,yDAAkD;AAElD,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,gBAAkC,CAAC;IACvC,IAAI,0BAA+B,CAAC;IAEpC,UAAU,CAAC,GAAG,EAAE;QACd,gBAAgB,GAAG,IAAI,0BAAgB,CAAC;YACtC,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE;gBACR,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;aAChB;YACD,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QAEH,0BAA0B,GAAG;YAC3B,IAAI,EAAE;gBACJ,GAAG,EAAE;oBACH,QAAQ,EAAE,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACpD,SAAS,EAAE,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACtD;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACpD,SAAS,EAAE,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACtD;aACF;YACD,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,gBAAgB;YAC1B,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,aAAa;SACpB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;YAClF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,MAAM,gBAAgB,GAAG,IAAI,0BAAgB,EAAE,CAAC;YAChD,gBAAgB,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC;YACzD,MAAM,CAAC,gBAAgB,CAAC,CAAC,cAAc,CAAC,0BAAgB,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iFAAiF,EAAE,GAAG,EAAE;YACzF,MAAM,gBAAgB,GAAG,IAAI,0BAAgB,EAAE,CAAC;YAChD,gBAAgB,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC;YACzD,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"NeedFilterParams.test.js","sourcesContent":["import NeedFilterParams from './NeedFilterParams';\n\ndescribe('NeedFilterParams class', () => {\n  let needFilterParams: NeedFilterParams;\n  let serializedNeedFilterParams: any;\n\n  beforeEach(() => {\n    needFilterParams = new NeedFilterParams({\n      davId: undefined,\n      location: {\n        lat: 32.050382,\n        long: 34.766149,\n      },\n      radius: 2000,\n    });\n\n    serializedNeedFilterParams = {\n      area: {\n        max: {\n          latitude: parseFloat((32.06836666390769).toFixed(6)),\n          longitude: parseFloat((34.78737405278662).toFixed(6)),\n        },\n        min: {\n          latitude: parseFloat((32.03239380095659).toFixed(6)),\n          longitude: parseFloat((34.74493228891106).toFixed(6)),\n        },\n      },\n      davId: undefined,\n      protocol: 'drone_charging',\n      ttl: undefined,\n      type: 'need_filter',\n    };\n  });\n\n  describe('serialize method', () => {\n    it('should return serialized NeedFilterParams object with the current values', () => {\n      expect(needFilterParams.serialize()).toEqual(serializedNeedFilterParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return a NeedFilterParams instance', () => {\n      const needParamsObject = new NeedFilterParams();\n      needParamsObject.deserialize(serializedNeedFilterParams);\n      expect(needParamsObject).toBeInstanceOf(NeedFilterParams);\n    });\n\n    it('should return deserialize NeedFilterParams instance with the current parameters', () => {\n      const needParamsObject = new NeedFilterParams();\n      needParamsObject.deserialize(serializedNeedFilterParams);\n      expect(needParamsObject).toEqual(needFilterParams);\n    });\n  });\n});\n"]}