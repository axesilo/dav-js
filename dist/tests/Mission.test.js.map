{"version":3,"sources":["../src/tests/Mission.test.ts"],"names":[],"mappings":"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","file":"Mission.test.js","sourcesContent":["import Config from '../Config';\nimport MessageParams from '../drone-charging/MessageParams';\nimport Bid from '../Bid';\nimport BidParams from '../drone-charging/BidParams';\nimport MissionParams from '../drone-charging/MissionParams';\nimport { PriceType } from '../common-enums';\nimport Price from '../Price';\nimport { Observable, DavID, ID } from '../common-types';\nimport Message from '../Message';\n\ndescribe('Mission class', () => {\n  const configuration = new Config({});\n  const bidParams = new BidParams({\n    id: 'BID_TOPIC_ID',\n    price: new Price('3', PriceType.flat),\n    vehicleId: '34',\n  });\n  const missionParams = new MissionParams({\n    id: 'SOURCE_ID_1',\n    neederDavId: 'DAV_ID',\n    vehicleId: 'DAV_ID',\n    price: new Price('100', PriceType.flat),\n  });\n  const selfId = 'selfId';\n  const bid = new Bid(selfId, bidParams, configuration);\n  const kafkaError = { msg: 'KAFKA_ERROR' };\n  const forContextSwitch = () => {\n    return new Promise((resolve, reject) => {\n      jest.useRealTimers();\n      setTimeout(resolve, 0);\n      jest.useFakeTimers();\n    });\n  };\n\n  describe('sendMessage method', () => {\n    beforeEach(() => {\n      jest.resetAllMocks();\n      jest.resetModules();\n    });\n\n    const kafkaMessageStreamMock = {\n      filterType: jest.fn(() =>\n        Observable.from([new MessageParams({ senderId: 'SOURCE_ID_1' })]),\n      ),\n    };\n\n    it('should succeed, validate kafka mock send message', async () => {\n      const kafkaMock = {\n        sendParams: () => Promise.resolve(true),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        selfId,\n        missionParams.id,\n        missionParams,\n        configuration,\n      );\n      await expect(\n        mission.sendMessage(new MessageParams({})),\n      ).resolves.toBeDefined();\n    });\n\n    it('should fail due to kafka exception', async () => {\n      const kafkaMock = {\n        sendParams: () => Promise.reject(kafkaError),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        selfId,\n        missionParams.id,\n        missionParams,\n        configuration,\n      );\n      await expect(mission.sendMessage(new MessageParams({}))).rejects.toBe(\n        kafkaError,\n      );\n    });\n\n    it('should call to Kafka sendParams', async () => {\n      const kafkaMock = {\n        sendParams: jest.fn(params => Promise.resolve(true)),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        selfId,\n        missionParams.id,\n        missionParams,\n        configuration,\n      );\n      const messageParams = new MessageParams({});\n      await mission.sendMessage(messageParams);\n      expect(kafkaMock.sendParams).toHaveBeenCalledWith(\n        missionParams.id,\n        messageParams,\n        configuration,\n      );\n    });\n\n    xit('test send for consumer', async () => {\n      const kafkaMock = {\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n        sendParams: () => Promise.resolve(true),\n      };\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        null,\n        missionParams,\n        configuration,\n      );\n      const messageParams = new MessageParams({});\n      // TODO\n    });\n  });\n\n  describe('messages method', () => {\n    beforeEach(() => {\n      jest.resetAllMocks();\n      jest.resetModules();\n    });\n\n    it('should receive message events', async () => {\n      const messageParams1 = new MessageParams({ senderId: 'SOURCE_ID_1' });\n      const messageParams2 = new MessageParams({ senderId: 'SOURCE_ID_2' });\n      const messageParams3 = new MessageParams({ senderId: 'SOURCE_ID_3' });\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() =>\n          Observable.from([messageParams1, messageParams2, messageParams3]),\n        ),\n      };\n      const kafkaMock = {\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../KafkaMessageStream', () => ({\n        default: jest.fn().mockImplementation(() => kafkaMessageStreamMock),\n      }));\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(selfId, null, missionParams, configuration);\n      const spy = jest.fn();\n      const messages = await mission.messages();\n      messages.subscribe(spy);\n      expect(spy.mock.calls.length).toBe(3);\n      expect(spy.mock.calls[0][0]).toEqual(\n        new Message(selfId, messageParams1, configuration),\n      );\n      expect(spy.mock.calls[1][0]).toEqual(\n        new Message(selfId, messageParams2, configuration),\n      );\n      expect(spy.mock.calls[2][0]).toEqual(\n        new Message(selfId, messageParams3, configuration),\n      );\n    });\n\n    xit('should receive error event', async () => {\n      jest.doMock('../Kafka', () => ({\n        default: {\n          paramsStream: async () =>\n            Observable.fromPromise(Promise.reject(kafkaError)),\n        },\n      }));\n\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        missionParams,\n        configuration,\n      );\n      const successSpy = jest.fn();\n      const errorSpy = jest.fn();\n      const messages = await mission.messages();\n      messages.subscribe(successSpy, errorSpy);\n      await forContextSwitch();\n      expect(successSpy.mock.calls.length).toBe(0);\n      expect(errorSpy.mock.calls.length).toBe(1);\n      expect(errorSpy.mock.calls[0][0]).toBe(kafkaError);\n    });\n  });\n\n  describe('signContract method', () => {\n    const privateKey = 'valid private key';\n    const contractsMock = {\n      approveMission: jest.fn((dav: DavID, key: string, configParam: Config) =>\n        Promise.resolve(''),\n      ),\n      startMission: jest.fn(\n        (\n          missionId: ID,\n          dav: DavID,\n          key: string,\n          vId: DavID,\n          price: string,\n          configParam: Config,\n        ) => Promise.resolve(''),\n      ),\n    };\n\n    beforeAll(() => {\n      jest.resetAllMocks();\n      jest.resetModules();\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n    });\n\n    it('should not throw any errors when get valid input and no errors', async () => {\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        null,\n        missionParams,\n        configuration,\n      );\n      await mission.signContract(privateKey);\n      expect(contractsMock.startMission).toHaveBeenCalledWith(\n        missionParams.id,\n        missionParams.neederDavId,\n        privateKey,\n        missionParams.vehicleId,\n        missionParams.price,\n        configuration,\n      );\n    });\n\n    it('should fail due to blockchain exception', async () => {\n      const web3Error = { msg: 'WEB3_ERROR' };\n      contractsMock.startMission.mockImplementation(() =>\n        Promise.reject(web3Error),\n      );\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        null,\n        missionParams,\n        configuration,\n      );\n      await expect(mission.signContract(privateKey)).rejects.toThrow(\n        `Fail to sign contract ${web3Error}`,\n      );\n    });\n  });\n\n  describe('finalizeMission method', () => {\n    const WALLET_PRIVATE_KEY = 'WALLET_PRIVET_KEY';\n\n    beforeEach(() => {\n      jest.resetAllMocks();\n      jest.resetModules();\n    });\n\n    it('should succeed with finalize mission transaction receipt', async () => {\n      const transactionReceipt = { transactionHash: 'TRANSACTION_HASH' };\n      const contractsMock = {\n        finalizeMission: () => Promise.resolve(transactionReceipt),\n      };\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        null,\n        missionParams,\n        configuration,\n      );\n      await expect(mission.finalizeMission(WALLET_PRIVATE_KEY)).resolves.toBe(\n        transactionReceipt,\n      );\n    });\n\n    it('should fail due to blockchain exception', async () => {\n      const web3Error = { msg: 'WEB3_ERROR' };\n      const contractsMock = {\n        finalizeMission: () => Promise.reject(web3Error),\n      };\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Mission: any = (await import('../Mission')).default;\n      const mission = new Mission(\n        missionParams.id,\n        null,\n        missionParams,\n        configuration,\n      );\n      await expect(mission.finalizeMission(WALLET_PRIVATE_KEY)).rejects.toThrow(\n        `Fail to finalize mission ${web3Error}`,\n      );\n    });\n  });\n});\n"]}