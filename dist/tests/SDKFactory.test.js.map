{"version":3,"sources":["../src/tests/SDKFactory.test.ts"],"names":[],"mappings":";;AAAA,8CAAuC;AACvC,sCAAsC;AAEtC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,UAAU;QACV,MAAM,MAAM,GAAG,IAAI,gBAAa,CAAC;YAC/B,WAAW,EAAE,CAAC,QAAQ,CAAC;YACvB,UAAU,EAAE,QAAQ;YACpB,aAAa,EAAE,CAAC,UAAU,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM;QACN,MAAM,GAAG,GAAG,oBAAU,CAAC,MAAM,CAAC,CAAC;QAE/B,SAAS;QACT,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;QACtC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"SDKFactory.test.js","sourcesContent":["import SDKFactory from '../SDKFactory';\nimport Configuration from '../Config';\n\ndescribe('SDKFactory method', () => {\n  it('should create SDK instance', () => {\n    // Arrange\n    const config = new Configuration({\n      apiSeedUrls: ['apiUrl'],\n      ethNodeUrl: 'ethUrl',\n      kafkaSeedUrls: ['kafkaUrl'],\n    });\n\n    // Act\n    const sdk = SDKFactory(config);\n\n    // Assert\n    expect(sdk.getIdentity).toBeDefined();\n    expect(sdk.isRegistered).toBeDefined();\n    expect(sdk.registerIdentity).toBeDefined();\n  });\n});\n"]}