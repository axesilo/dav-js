{"version":3,"sources":["../src/tests/Bid.test.ts"],"names":[],"mappings":";;AAAA,sCAA+B;AAC/B,yDAAkD;AAClD,oCAA6B;AAC7B,mEAA4D;AAC5D,mEAA4D;AAE5D,+BAAkD;AAClD,wCAAiC;AACjC,kDAA4C;AAC5C,sEAA+D;AAC/D,kFAA2E;AAC3E,wEAAiE;AACjE,4DAAqD;AACrD,8DAA0E;AAC1E,kDAA6C;AAC7C,kDAA2C;AAC3C,8EAAuE;AAEvE,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,EAAE,CAAC,CAAC;IAC9B,MAAM,MAAM,GAAG,SAAS,CAAC;IACzB,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;IACzC,IAAI,SAAoB,CAAC;IACzB,IAAI,aAA4B,CAAC;IACjC,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC;QACtC,EAAE,EAAE,YAAY;QAChB,WAAW,EAAE,QAAQ;QACrB,SAAS,EAAE,QAAQ;QACnB,KAAK,EAAE,KAAK;KACb,CAAC,CAAC;IACH,MAAM,UAAU,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC;IAE1C,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,SAAS,GAAG,IAAI,mBAAS,CAAC;YACxB,EAAE,EAAE,cAAc;YAClB,KAAK,EAAE,IAAI,eAAK,CAAC,GAAG,EAAE,wBAAS,CAAC,IAAI,CAAC;YACrC,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,aAAa,GAAG,IAAI,uBAAa,CAAC;YAChC,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,IAAI,kBAAgD,CAAC;QAErD,UAAU,CAAC,GAAG,EAAE;YACd,kBAAkB,GAAG,IAAI,sCAA4B,CAAC;gBACpD,KAAK,EAAE,SAAS,CAAC,EAAE;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;YACpE,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CACpD,IAAI,gCAAsB,CAAC,kBAAkB,CAAC,CAC/C,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;YAC7E,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,iBAAY,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACnE,CAAC;YAEF,MAAM,SAAS,GAAG;gBAChB,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CACE,OAAe,EACf,aAAsC,EACtC,aAAsB,EACtB,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CACvB;gBACD,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAExD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CACpD,IAAI,gCAAsB,CACxB,IAAI,sCAA4B,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAC1D,CACF,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0GAA0G,EAAE,KAAK,IAAI,EAAE;YACxH,MAAM,4BAA4B,GAAG,IAAI,sCAA4B,CAAC;gBACpE,KAAK,EAAE,YAAY;aACpB,CAAC,CAAC;YAEH,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CACvB,iBAAY,CAAC,IAAI,CAAC,CAAC,4BAA4B,EAAE,kBAAkB,CAAC,CAAC,CACtE;aACF,CAAC;YAEF,MAAM,SAAS,GAAG;gBAChB,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CACE,OAAe,EACf,aAAsC,EACtC,aAAsB,EACtB,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CACvB;gBACD,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAExD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CACpD,IAAI,gCAAsB,CACxB,IAAI,sCAA4B,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAC1D,CACF,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,SAAS,GAAG;gBAChB,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CACE,OAAe,EACf,aAAsC,EACtC,aAAsB,EACtB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CACnC;gBACD,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CACrB,OAAO,CAAC,OAAO,CACb,IAAI,4BAAkB,CACpB,yBAAU,CAAC,cAAc,CAAC,iBAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CACzD,CACF,CACF;aACF,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAExD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,iBAAY,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACnE,CAAC;YAEF,MAAM,SAAS,GAAG;gBAChB,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CACE,OAAe,EACf,aAAsC,EACtC,aAAsB,EACtB,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CACvB;gBACD,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aACvD,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAEvD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;YAC9E,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CACvB,iBAAY,CAAC,IAAI,CAAC;oBAChB,IAAI,oCAA0B,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;iBACnD,CAAC,CACH;aACF,CAAC;YACF,MAAM,SAAS,GAAG;gBAChB,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAe,EAAE,WAAoB,EAAE,EAAE,CAC7D,OAAO,CAAC,OAAO,EAAE,CAClB;gBACD,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CAAC,MAAc,EAAE,OAAsB,EAAE,WAAoB,EAAE,EAAE,CAC/D,OAAO,CAAC,OAAO,EAAE,CACpB;gBACD,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,MAAM,aAAa,GAAG;gBACpB,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAChD,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;aAC5C,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;YAChE,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CACrE,IAAI,iBAAO,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,CAAC,CAC3D,CAAC;YAEF,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC3D,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACtE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAC/C,SAAS,CAAC,EAAE,EACZ,aAAa,EACb,MAAM,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,SAAS,GAAG;gBAChB,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAe,EAAE,WAAoB,EAAE,EAAE,CAC7D,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAC3B;aACF,CAAC;YACF,MAAM,aAAa,GAAG;gBACpB,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAChD,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;aAC5C,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;YAChE,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACpE,2BAA2B,UAAU,EAAE,CACxC,CAAC;YAEF,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC/D,UAAU;YACV,MAAM,SAAS,GAAG;gBAChB,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAe,EAAE,WAAoB,EAAE,EAAE,CAC7D,OAAO,CAAC,OAAO,EAAE,CAClB;gBACD,UAAU,EAAE,IAAI,CAAC,EAAE,CACjB,CAAC,MAAc,EAAE,OAAsB,EAAE,WAAoB,EAAE,EAAE,CAC/D,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAC7B;aACF,CAAC;YACF,MAAM,aAAa,GAAG;gBACpB,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;aAC5C,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;YAC/D,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACjD,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CACjE,UAAU,CACX,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACtE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAC/C,SAAS,CAAC,EAAE,EACZ,aAAa,EACb,MAAM,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAE/C,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACpE,2FAA2F,CAC5F,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,MAAM,cAAc,GAAG,IAAI,uBAAa,CAAC;YACvC,EAAE,EAAE,cAAc;YAClB,WAAW,EAAE,QAAQ;YACrB,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,IAAI,uBAAa,CAAC;YACvC,EAAE,EAAE,cAAc;YAClB,WAAW,EAAE,QAAQ;YACrB,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,IAAI,uBAAa,CAAC;YACvC,EAAE,EAAE,cAAc;YAClB,WAAW,EAAE,QAAQ;YACrB,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,UAAU,CAAC;QAE5B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC1B,OAAO,EAAE,mBAAS;aACnB,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;YACpE,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CACvB,iBAAY,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC,CACpE;aACF,CAAC;YACF,MAAM,SAAS,GAAG;gBAChB,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC;gBACxC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpD,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC7C,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,CAAC;gBACzC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;aACpE,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAExD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACjD,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YACtB,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxB,MAAM,gBAAgB,EAAE,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,IAAI,iBAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,CACjE,CAAC;YACF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,IAAI,iBAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,CACjE,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;YACtF,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CACvB,iBAAY,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC,CACpE;aACF,CAAC;YACF,MAAM,SAAS,GAAG;gBAChB,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC;gBACxC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACpD,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC7C,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC1C,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;aACpE,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAExD,MAAM,YAAY,GAAG,cAAc,CAAC;YACpC,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACrD,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YACtB,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxB,MAAM,gBAAgB,EAAE,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,IAAI,iBAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,CACjE,CAAC;YACF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAClC,IAAI,iBAAO,CAAC,QAAQ,EAAE,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,CACjE,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACrD,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YACjD,wHAAwH;YACxH,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACjD,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC3B,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtC,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACzC,MAAM,gBAAgB,EAAE,CAAC;YACzB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;YACzE,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,iBAAY,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aAC9D,CAAC;YACF,MAAM,SAAS,GAAG;gBAChB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC1C,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;aACpE,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,cAAc,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;YAC5C,MAAM,OAAO,GAAG,MAAM,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACzD,cAAc,CAAC,SAAS,CACtB,IAAI,CAAC,EAAE;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC,CACF,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,SAAS,GAAG;gBAChB,eAAe,EAAE,GAAG,EAAE,CAAC,SAAS;gBAChC,WAAW,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE;gBACpC,UAAU,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE;gBACnC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAe,EAAE,WAAoB,EAAE,EAAE,CAC9D,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAC9B;aACF,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,MAAM,aAAa,GAAG;gBACpB,cAAc,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE;gBACvC,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE;aACtC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;YAChE,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/C,+DAA+D;YAC/D,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,MAAM,SAAS,GAAG;YAChB,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC7C,CAAC;QACF,SAAS,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/C,MAAM,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;YACtE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAC/C,SAAS,CAAC,EAAE,EACZ,aAAa,EACb,MAAM,CACP,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACrD,MAAM,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAC1D,6CAA6C,CAC9C,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,IAAI,aAAsC,CAAC;QAE3C,UAAU,CAAC,GAAG,EAAE;YACd,aAAa,GAAG,IAAI,iCAAuB,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;YACtF,MAAM,sBAAsB,GAAG;gBAC7B,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,iBAAY,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aAC9D,CAAC;YAEF,MAAM,SAAS,GAAG;gBAChB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACjE,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAErD,MAAM,uBAAuB,GAAG,MAAM,GAAG,CAAC,kBAAkB,EAAE,CAAC;YAC/D,MAAM,iBAAiB,GAAG,MAAM,uBAAuB,CAAC,SAAS,EAAE,CAAC;YAEpE,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAC/B,IAAI,2BAAiB,CAAC,SAAS,CAAC,EAAE,EAAE,aAAa,EAAE,MAAM,CAAC,CAC3D,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,SAAS,GAAG;gBAChB,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;aACvD,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YACxD,yCAAyC;YACzC,MAAM,GAAG,GAAG,CAAC,2CAAa,QAAQ,EAAC,CAAC,CAAC,OAAO,CAAC;YAC7C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAErD,MAAM,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"Bid.test.js","sourcesContent":["import Config from '../Config';\nimport BidParams from '../ride-hailing/BidParams';\nimport Price from '../Price';\nimport MessageParams from '../drone-charging/MessageParams';\nimport MissionParams from '../drone-charging/MissionParams';\nimport IConfig from '../IConfig';\nimport { Observable as RxObservable } from 'rxjs';\nimport Mission from '../Mission';\nimport { PriceType } from '../common-enums';\nimport CommitmentConfirmation from '../CommitmentConfirmation';\nimport CommitmentConfirmationParams from '../CommitmentConfirmationParams';\nimport CommitmentRequestParams from '../CommitmentRequestParams';\nimport CommitmentRequest from '../CommitmentRequest';\nimport KafkaMessageStream, { IKafkaMessage } from '../KafkaMessageStream';\nimport { Observable } from '../common-types';\nimport AxiosMock from '../mocks/AxiosMock';\nimport MissionPeerIdMessageParams from '../MissionPeerIdMessageParams';\n\ndescribe('Bid class', () => {\n  const config = new Config({});\n  const selfId = 'SELF_ID';\n  jest.doMock('../ride-hailing/BidParams');\n  let bidParams: BidParams;\n  let messageParams: MessageParams;\n  const missionParams = new MissionParams({\n    id: 'MISSION_ID',\n    neederDavId: 'DAV_ID',\n    vehicleId: 'DAV_ID',\n    price: '100',\n  });\n  const kafkaError = { msg: 'Kafka error' };\n\n  const forContextSwitch = () => {\n    return new Promise((resolve, reject) => {\n      jest.useRealTimers();\n      setTimeout(resolve, 0);\n      jest.useFakeTimers();\n    });\n  };\n\n  beforeEach(() => {\n    jest.resetAllMocks();\n    jest.resetModules();\n    bidParams = new BidParams({\n      id: 'BID_TOPIC_ID',\n      price: new Price('3', PriceType.flat),\n      vehicleId: '34',\n    });\n    messageParams = new MessageParams({\n      senderId: 'sender',\n    });\n  });\n\n  describe('requestCommitment method', () => {\n    let confirmationParams: CommitmentConfirmationParams;\n\n    beforeEach(() => {\n      confirmationParams = new CommitmentConfirmationParams({\n        bidId: bidParams.id,\n      });\n    });\n\n    it('should return confirmation for already confirmed bid', async () => {\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.requestCommitment()).resolves.toEqual(\n        new CommitmentConfirmation(confirmationParams),\n      );\n    });\n\n    it('should return confirmation after bidder had confirmed the bid', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() => RxObservable.from([confirmationParams])),\n      };\n\n      const kafkaMock = {\n        sendParams: jest.fn(\n          (\n            topicId: string,\n            requestParams: CommitmentRequestParams,\n            configuration: IConfig,\n          ) => Promise.resolve(),\n        ),\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      bidParams.isCommitted = false;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.requestCommitment()).resolves.toEqual(\n        new CommitmentConfirmation(\n          new CommitmentConfirmationParams({ bidId: bidParams.id }),\n        ),\n      );\n      expect(kafkaMock.sendParams).toHaveBeenCalledTimes(1);\n      expect(kafkaMessageStreamMock.filterType).toHaveBeenCalledTimes(1);\n    });\n\n    it('should return confirmation after bidder had confirmed the bid, and another bid confirmation was filtered', async () => {\n      const anotherBidConfirmationParams = new CommitmentConfirmationParams({\n        bidId: 'anotherBid',\n      });\n\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() =>\n          RxObservable.from([anotherBidConfirmationParams, confirmationParams]),\n        ),\n      };\n\n      const kafkaMock = {\n        sendParams: jest.fn(\n          (\n            topicId: string,\n            requestParams: CommitmentRequestParams,\n            configuration: IConfig,\n          ) => Promise.resolve(),\n        ),\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      bidParams.isCommitted = false;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.requestCommitment()).resolves.toEqual(\n        new CommitmentConfirmation(\n          new CommitmentConfirmationParams({ bidId: bidParams.id }),\n        ),\n      );\n      expect(kafkaMock.sendParams).toHaveBeenCalledTimes(1);\n      expect(kafkaMessageStreamMock.filterType).toHaveBeenCalledTimes(1);\n    });\n\n    it('should throw due to kafka error in sendParams', async () => {\n      const kafkaMock = {\n        sendParams: jest.fn(\n          (\n            topicId: string,\n            requestParams: CommitmentRequestParams,\n            configuration: IConfig,\n          ) => Promise.reject('kafka error'),\n        ),\n        messages: jest.fn(() =>\n          Promise.resolve(\n            new KafkaMessageStream(\n              Observable.fromObservable(RxObservable.from([]), '1000'),\n            ),\n          ),\n        ),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      bidParams.isCommitted = false;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.requestCommitment()).rejects.toBe('kafka error');\n    });\n\n    xit('should throw due to kafka error in messages', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() => RxObservable.from([confirmationParams])),\n      };\n\n      const kafkaMock = {\n        sendParams: jest.fn(\n          (\n            topicId: string,\n            requestParams: CommitmentRequestParams,\n            configuration: IConfig,\n          ) => Promise.resolve(),\n        ),\n        messages: jest.fn(() => Promise.reject('kafka error')),\n      };\n      jest.doMock('./Kafka', () => ({ default: kafkaMock }));\n\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      bidParams.isCommitted = false;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.requestCommitment()).rejects.toBe('kafka error');\n      expect(kafkaMock.sendParams).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('accept method', () => {\n    it('should not throw any errors when get valid input and no errors', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() =>\n          RxObservable.from([\n            new MissionPeerIdMessageParams({ senderId: null }),\n          ]),\n        ),\n      };\n      const kafkaMock = {\n        createTopic: jest.fn((topicId: string, configParam: IConfig) =>\n          Promise.resolve(),\n        ),\n        sendParams: jest.fn(\n          (needId: string, mParams: MessageParams, configParam: IConfig) =>\n            Promise.resolve(),\n        ),\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      const contractsMock = {\n        approveMission: jest.fn(() => Promise.resolve()),\n        generateMissionId: jest.fn(() => 'topicId'),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.accept(missionParams, 'Private_key')).resolves.toEqual(\n        new Mission(missionParams.id, null, missionParams, config),\n      );\n\n      expect(contractsMock.generateMissionId).toHaveBeenCalled();\n      expect(kafkaMock.createTopic).toHaveBeenCalledWith('topicId', config);\n      expect(kafkaMock.sendParams).toHaveBeenCalledWith(\n        bidParams.id,\n        missionParams,\n        config,\n      );\n    });\n\n    it('should throw due to topic creation failure', async () => {\n      const kafkaMock = {\n        createTopic: jest.fn((topicId: string, configParam: IConfig) =>\n          Promise.reject(kafkaError),\n        ),\n      };\n      const contractsMock = {\n        approveMission: jest.fn(() => Promise.resolve()),\n        generateMissionId: jest.fn(() => 'topicId'),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.accept(missionParams, 'Private_key')).rejects.toThrow(\n        `Fail to create a topic: ${kafkaError}`,\n      );\n\n      expect(kafkaMock.createTopic).toHaveBeenCalledWith('topicId', config);\n    });\n\n    xit('should throw due to kafka send message failure', async () => {\n      // Arrange\n      const kafkaMock = {\n        createTopic: jest.fn((topicId: string, configParam: IConfig) =>\n          Promise.resolve(),\n        ),\n        sendParams: jest.fn(\n          (needId: string, mParams: MessageParams, configParam: IConfig) =>\n            Promise.reject(kafkaError),\n        ),\n      };\n      const contractsMock = {\n        generateMissionId: jest.fn(() => 'topicId'),\n      };\n      jest.doMock('./Kafka', () => ({ default: kafkaMock }));\n      jest.doMock('./Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid('needId', bidParams, config);\n      await expect(bid.accept(missionParams, 'Private_key')).rejects.toBe(\n        kafkaError,\n      );\n      expect(kafkaMock.createTopic).toHaveBeenCalledWith('topicId', config);\n      expect(kafkaMock.sendParams).toHaveBeenCalledWith(\n        bidParams.id,\n        missionParams,\n        config,\n      );\n    });\n\n    it('should throw to due to unconfirmed bid', async () => {\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      bidParams.isCommitted = false;\n      const bid = new Bid(selfId, bidParams, config);\n\n      await expect(bid.accept(missionParams, 'Private_key')).rejects.toThrow(\n        `Bidder hasn't confirmed commitment to this bid! please get commitment confirmation first.`,\n      );\n    });\n  });\n\n  describe('missions method', () => {\n    const missionParams1 = new MissionParams({\n      id: 'MISSION_ID_1',\n      neederDavId: 'DAV_ID',\n      vehicleId: 'DAV_ID',\n      price: '100',\n    });\n    const missionParams2 = new MissionParams({\n      id: 'MISSION_ID_2',\n      neederDavId: 'DAV_ID',\n      vehicleId: 'DAV_ID',\n      price: '100',\n    });\n    const missionParams3 = new MissionParams({\n      id: 'MISSION_ID_3',\n      neederDavId: 'DAV_ID',\n      vehicleId: 'DAV_ID',\n      price: '100',\n    });\n\n    const TOPIC_ID = 'TOPIC_ID';\n\n    beforeEach(() => {\n      jest.clearAllMocks();\n      jest.resetAllMocks();\n      jest.resetModules();\n      jest.doMock('axios', () => ({\n        default: AxiosMock,\n      }));\n    });\n\n    xit('should receive missions and call relevant functions', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() =>\n          RxObservable.from([missionParams1, missionParams2, missionParams3]),\n        ),\n      };\n      const kafkaMock = {\n        generateTopicId: jest.fn(() => TOPIC_ID),\n        sendParams: jest.fn(params => Promise.resolve(true)),\n        createTopic: jest.fn(() => Promise.resolve()),\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('./KafkaMessageStream', () => ({\n        default: jest.fn().mockImplementation(() => kafkaMessageStreamMock),\n      }));\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(TOPIC_ID, bidParams, config);\n      const spy = jest.fn();\n      const missions = await bid.missions();\n      missions.subscribe(spy);\n      await forContextSwitch();\n      expect(spy.mock.calls.length).toBe(3);\n      expect(spy.mock.calls[0][0]).toEqual(\n        new Mission(TOPIC_ID, missionParams1.id, missionParams1, config),\n      );\n      expect(spy.mock.calls[1][0]).toEqual(\n        new Mission(TOPIC_ID, missionParams2.id, missionParams2, config),\n      );\n    });\n\n    xit('should receive missions with specified topicId and relevant functions', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() =>\n          RxObservable.from([missionParams1, missionParams2, missionParams3]),\n        ),\n      };\n      const kafkaMock = {\n        generateTopicId: jest.fn(() => TOPIC_ID),\n        sendParams: jest.fn(params => Promise.resolve(true)),\n        createTopic: jest.fn(() => Promise.resolve()),\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../KafkaMessageStream', () => ({\n        default: jest.fn().mockImplementation(() => kafkaMessageStreamMock),\n      }));\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n\n      const anotherTopic = 'anotherTopic';\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(anotherTopic, bidParams, config);\n      const spy = jest.fn();\n      const missions = await bid.missions();\n      missions.subscribe(spy);\n      await forContextSwitch();\n      expect(spy.mock.calls.length).toBe(3);\n      expect(spy.mock.calls[0][0]).toEqual(\n        new Mission(TOPIC_ID, missionParams1.id, missionParams1, config),\n      );\n      expect(spy.mock.calls[1][0]).toEqual(\n        new Mission(TOPIC_ID, missionParams2.id, missionParams2, config),\n      );\n      expect(kafkaMock.generateTopicId).toHaveBeenCalled();\n      expect(kafkaMock.createTopic).toHaveBeenCalled();\n    });\n\n    xit('should receive Kafka error event', async () => {\n      // kafkaMock.paramsStream.mockImplementation(() => Promise.resolve(Observable.fromPromise(Promise.reject(kafkaError))));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid('needId', bidParams, config);\n      const successSpy = jest.fn();\n      const errorSpy = jest.fn();\n      const missions = await bid.missions();\n      missions.subscribe(successSpy, errorSpy);\n      await forContextSwitch();\n      expect(successSpy.mock.calls.length).toBe(0);\n      expect(errorSpy.mock.calls.length).toBe(1);\n      expect(errorSpy.mock.calls[0][0]).toBe(kafkaError);\n    });\n  });\n\n  describe('messages method', () => {\n    it('should get one message when get valid input and no errors', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() => RxObservable.from([messageParams])),\n      };\n      const kafkaMock = {\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../KafkaMessageStream', () => ({\n        default: jest.fn().mockImplementation(() => kafkaMessageStreamMock),\n      }));\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n      const messagesStream = await bid.messages();\n      const message = await new Promise<any>((resolve, reject) => {\n        messagesStream.subscribe(\n          next => {\n            resolve(next);\n          },\n          error => {\n            reject(error);\n          },\n        );\n      });\n      expect(message.selfId).toBe(selfId);\n      expect(kafkaMock.messages).toHaveBeenCalledWith(selfId, config);\n    });\n\n    xit('should throw because paramsStream is throwing', async () => {\n      const kafkaMock = {\n        generateTopicId: () => 'topicId',\n        createTopic: () => Promise.resolve(),\n        sendParams: () => Promise.resolve(),\n        paramsStream: jest.fn((topicId: string, configParam: IConfig) =>\n          Promise.reject('kafka error'),\n        ),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      const contractsMock = {\n        approveMission: () => Promise.resolve(),\n        startMission: () => Promise.resolve(),\n      };\n      jest.doMock('../Contracts', () => ({ default: contractsMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n      // await expect(bid.messages()).rejects.toEqual('kafka error');\n      expect(kafkaMock.paramsStream).toHaveBeenCalledWith(bidParams.id, config);\n    });\n  });\n\n  describe('sendMessage method', () => {\n    const kafkaMock = {\n      sendParams: jest.fn(() => Promise.resolve()),\n    };\n    beforeAll(() => {\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n    });\n\n    it('should succeed and call relevant function', async () => {\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(selfId, bidParams, config);\n      await expect(bid.sendMessage(messageParams)).resolves.toBeUndefined();\n      expect(kafkaMock.sendParams).toHaveBeenCalledWith(\n        bidParams.id,\n        messageParams,\n        config,\n      );\n    });\n\n    it('should throw because topic id == selfId', async () => {\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(bidParams.id, bidParams, config);\n      await expect(bid.sendMessage(messageParams)).rejects.toThrow(\n        'You cannot send message to your own channel',\n      );\n    });\n  });\n\n  describe('commitmentRequests method', () => {\n    let requestParams: CommitmentRequestParams;\n\n    beforeEach(() => {\n      requestParams = new CommitmentRequestParams({ neederId: 'neederId' });\n    });\n\n    it('should return valid commitment requests when there are no kafka errors', async () => {\n      const kafkaMessageStreamMock = {\n        filterType: jest.fn(() => RxObservable.from([requestParams])),\n      };\n\n      const kafkaMock = {\n        messages: jest.fn(() => Promise.resolve(kafkaMessageStreamMock)),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(bidParams.id, bidParams, config);\n\n      const commitmentRequestStream = await bid.commitmentRequests();\n      const commitmentRequest = await commitmentRequestStream.toPromise();\n\n      expect(commitmentRequest).toEqual(\n        new CommitmentRequest(bidParams.id, requestParams, config),\n      );\n      expect(kafkaMock.messages).toHaveBeenCalledTimes(1);\n    });\n\n    it('should throw error due to kafka error', async () => {\n      const kafkaMock = {\n        messages: jest.fn(() => Promise.reject('kafka error')),\n      };\n      jest.doMock('../Kafka', () => ({ default: kafkaMock }));\n      // tslint:disable-next-line:variable-name\n      const Bid = (await import('../Bid')).default;\n      const bid = new Bid(bidParams.id, bidParams, config);\n\n      await expect(bid.commitmentRequests()).rejects.toBe('kafka error');\n    });\n  });\n});\n"]}